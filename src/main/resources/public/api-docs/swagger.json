{
  "openapi" : "3.0.0",
  "info" : {
    "title" : "Mucry application API",
    "description" : "This is the murcy application API\n",
    "contact" : {
      "email" : "murcyapplication@gmail.com"
    },
    "license" : {
      "name" : "Apache 2.0",
      "url" : "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version" : "1.0.0"
  },
  "servers" : [ {
    "url" : "/api"
  } ],
  "tags" : [ {
    "name" : "user",
    "description" : "Everything about users"
  }, {
    "name" : "quiz",
    "description" : "Everything about quizes"
  }, {
    "name" : "question",
    "description" : "Everything about questions"
  }, {
    "name" : "workflow",
    "description" : "EveryThing about workflow"
  }, {
    "name" : "request",
    "description" : "EveryThing about requests"
  } ],
  "paths" : {
    "/user" : {
      "post" : {
        "tags" : [ "user" ],
        "summary" : "Create user",
        "description" : "Create user in the system",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UserRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "User logged created"
          },
          "400" : {
            "description" : "User already exists",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/user/confirm/{token}" : {
      "post" : {
        "tags" : [ "user" ],
        "summary" : "Confirm user register",
        "description" : "Confrim user register, from token send by email",
        "parameters" : [ {
          "name" : "token",
          "in" : "path",
          "description" : "token to be confirmed",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "User confirmed"
          },
          "404" : {
            "description" : "token not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/user/login" : {
      "post" : {
        "tags" : [ "user" ],
        "summary" : "Log in in the app",
        "description" : "Logs in in the application if the credentials are true",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/LoginRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "User logged in",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Auth"
                }
              }
            }
          },
          "401" : {
            "description" : "Invalid user, invalid password (or not confirmed user)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/user/info" : {
      "get" : {
        "tags" : [ "user" ],
        "summary" : "Get current user info",
        "description" : "Get current logged user info",
        "responses" : {
          "201" : {
            "description" : "User data",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserDto"
                }
              }
            }
          },
          "403" : {
            "description" : "Not authorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearerAuth" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "user" ],
        "summary" : "Update current user info",
        "description" : "Update current user info (Only fill change fields)",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateUserRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "User updated",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserDto"
                }
              }
            }
          },
          "403" : {
            "description" : "Not authorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearerAuth" : [ ]
        } ]
      }
    },
    "/user/info/{id}" : {
      "get" : {
        "tags" : [ "user" ],
        "summary" : "Get user info",
        "description" : "Get user info",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "user id to get info",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "User logged in",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserDto"
                }
              }
            }
          },
          "403" : {
            "description" : "Not authorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearerAuth" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "user" ],
        "summary" : "Update user info",
        "description" : "Update user info (Only fill change fields)",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "user id to update info",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateUserRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "User logged in",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserDto"
                }
              }
            }
          },
          "403" : {
            "description" : "Not authorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearerAuth" : [ ]
        } ]
      }
    },
    "/quiz" : {
      "post" : {
        "tags" : [ "quiz" ],
        "summary" : "Create quiz",
        "description" : "Create new Quiz",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/QuizRequest"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "created"
          },
          "403" : {
            "description" : "Not authorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearerAuth" : [ ]
        } ]
      }
    },
    "/quiz/list" : {
      "get" : {
        "tags" : [ "quiz" ],
        "summary" : "Get current user quiz list",
        "description" : "Get current logged user quiz list",
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ArrayQuizDto"
                }
              }
            }
          },
          "403" : {
            "description" : "Not authorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearerAuth" : [ ]
        } ]
      }
    },
    "/quiz/list/{id}" : {
      "get" : {
        "tags" : [ "quiz" ],
        "summary" : "Get given user ID quiz list",
        "description" : "Get user identified by ID quiz list",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "user id to get info",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ArrayQuizDto"
                }
              }
            }
          },
          "403" : {
            "description" : "Not authorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearerAuth" : [ ]
        } ]
      }
    },
    "/quiz/{id}" : {
      "get" : {
        "tags" : [ "quiz" ],
        "summary" : "Get quiz by ID",
        "description" : "Get quiz by question identifier",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Quiz id to fech info",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QuizDto"
                }
              }
            }
          },
          "403" : {
            "description" : "Not authorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearerAuth" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "quiz" ],
        "summary" : "Update quiz by ID",
        "description" : "Update quiz by question identifier",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "request id to update info",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/QuizRequest"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Updated",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QuizDto"
                }
              }
            }
          },
          "403" : {
            "description" : "Not authorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearerAuth" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "quiz" ],
        "summary" : "Delete quiz by ID",
        "description" : "Delete quiz by question identifier",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "quiz id to delete info",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Deleted"
          },
          "403" : {
            "description" : "Not authorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearerAuth" : [ ]
        } ]
      }
    },
    "/quiz/{id}/public" : {
      "get" : {
        "tags" : [ "quiz" ],
        "summary" : "Get quiz info by ID",
        "description" : "Get quiz public info by question identifier",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Quiz id to fetch info",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SimplifiedQuizDto"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearerAuth" : [ ]
        } ]
      }
    },
    "/quiz/{id}/answers" : {
      "get" : {
        "tags" : [ "quiz", "answer" ],
        "summary" : "Get quiz answers by quiz ID",
        "description" : "Get quiz answers by question identifier",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Quiz id to fetch answers",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ArrayAnswerDto"
                }
              }
            }
          },
          "403" : {
            "description" : "Not authorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearerAuth" : [ ]
        } ]
      }
    },
    "/quiz/{id}/answer" : {
      "post" : {
        "tags" : [ "quiz", "answer" ],
        "summary" : "Submit new answer to given quiz id",
        "description" : "Submit new answer to given quiz identified by given id in path",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Quiz id to fetch answers",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AnswerRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ArrayAnswerDto"
                }
              }
            }
          },
          "403" : {
            "description" : "Not authorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearerAuth" : [ ]
        } ]
      }
    },
    "/quiz/request/list" : {
      "get" : {
        "tags" : [ "quiz" ],
        "summary" : "Get quiz requests",
        "description" : "Get quiz request",
        "parameters" : [ {
          "name" : "closed",
          "in" : "query",
          "description" : "quiz is closed",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "approved",
          "in" : "query",
          "description" : "quiz is approved",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "quiz requests",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ArrayQuizDto"
                }
              }
            }
          },
          "403" : {
            "description" : "Not authorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearerAuth" : [ ]
        } ]
      }
    },
    "/quiz/search" : {
      "get" : {
        "tags" : [ "quiz" ],
        "summary" : "Search Quizzes",
        "description" : "Search Quizzes with query search, (Without paginarion set start and end as -1)",
        "parameters" : [ {
          "name" : "page",
          "in" : "query",
          "description" : "pagination page",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "default" : 0
          }
        }, {
          "name" : "size",
          "in" : "query",
          "description" : "pagination size",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "default" : 50
          }
        }, {
          "name" : "sortColumn",
          "in" : "query",
          "description" : "Search order column",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "default" : "title"
          }
        }, {
          "name" : "sortType",
          "in" : "query",
          "description" : "Search order type",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "default" : "desc",
            "enum" : [ "asc", "desc" ]
          }
        }, {
          "name" : "query",
          "in" : "query",
          "description" : "Search by word",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "quizzes",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ArraySimplifiedQuizDto"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearerAuth" : [ ]
        } ]
      }
    },
    "/question" : {
      "post" : {
        "tags" : [ "question" ],
        "summary" : "Create question",
        "description" : "Create new question",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/QuestionRequest"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "created"
          },
          "403" : {
            "description" : "Not authorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearerAuth" : [ ]
        } ]
      }
    },
    "/question/list" : {
      "get" : {
        "tags" : [ "question" ],
        "summary" : "Get current user question list",
        "description" : "Get current user question list",
        "responses" : {
          "200" : {
            "description" : "questionDto",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ArrayQuestionDto"
                }
              }
            }
          },
          "403" : {
            "description" : "Not authorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearerAuth" : [ ]
        } ]
      }
    },
    "/question/list/{id}" : {
      "get" : {
        "tags" : [ "question" ],
        "summary" : "Get given user ID question list",
        "description" : "Get user identified by ID question list",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "User id reference to get user questions",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "questionDto",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ArrayQuestionDto"
                }
              }
            }
          },
          "403" : {
            "description" : "Not authorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearerAuth" : [ ]
        } ]
      }
    },
    "/question/{id}" : {
      "get" : {
        "tags" : [ "question" ],
        "summary" : "Get question by ID",
        "description" : "Get question by question identifier",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "question id to retrieve info",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "questionDto",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QuestionDto"
                }
              }
            }
          },
          "403" : {
            "description" : "Not authorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearerAuth" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "question" ],
        "summary" : "Update question by ID",
        "description" : "Update question by question identifier",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "question id to update info",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/QuestionRequest"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Updated",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QuestionDto"
                }
              }
            }
          },
          "403" : {
            "description" : "Not authorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearerAuth" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "question" ],
        "summary" : "Delete question by ID",
        "description" : "Delete question by question identifier",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "question id to delete",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Deleted"
          },
          "403" : {
            "description" : "Not authorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearerAuth" : [ ]
        } ]
      }
    },
    "/question/{id}/answers" : {
      "get" : {
        "tags" : [ "question", "answer" ],
        "summary" : "Get question answers by question ID",
        "description" : "Get question answers by question identifier",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "question id to fetch answers",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ArrayIndividualAnswerDto"
                }
              }
            }
          },
          "403" : {
            "description" : "Not authorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearerAuth" : [ ]
        } ]
      }
    },
    "/question/request/list" : {
      "get" : {
        "tags" : [ "question" ],
        "summary" : "Get question requests",
        "description" : "Get question request",
        "parameters" : [ {
          "name" : "closed",
          "in" : "query",
          "description" : "question is closed",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "approved",
          "in" : "query",
          "description" : "question is approved",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Questions requests",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ArrayQuestionDto"
                }
              }
            }
          },
          "403" : {
            "description" : "Not authorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearerAuth" : [ ]
        } ]
      }
    },
    "/workflow/{id}/approve" : {
      "put" : {
        "tags" : [ "workflow" ],
        "summary" : "Aprrove workflow",
        "description" : "Approve workflow with given ID",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "workflow id to be approved",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/WorkflowUpdateRequest"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Approved"
          },
          "403" : {
            "description" : "Not authorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearerAuth" : [ ]
        } ]
      }
    },
    "/workflow/{id}/deny" : {
      "put" : {
        "tags" : [ "workflow" ],
        "summary" : "Deny workflow",
        "description" : "Deny workflow with given ID",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "workflow id to be denied",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/WorkflowUpdateRequest"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Denied"
          },
          "403" : {
            "description" : "Not authorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearerAuth" : [ ]
        } ]
      }
    },
    "/request/editor" : {
      "get" : {
        "tags" : [ "request" ],
        "summary" : "Get current user requests",
        "description" : "Get current user request if exists",
        "responses" : {
          "200" : {
            "description" : "editorRequest",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EditorRequest"
                }
              }
            }
          },
          "403" : {
            "description" : "Not authorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearerAuth" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "request" ],
        "summary" : "Update last request",
        "description" : "Logs in in the application if the credentials are true",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DescriptionRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "description" : "Updated"
          },
          "403" : {
            "description" : "Not authorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearerAuth" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "request" ],
        "summary" : "Request be editor",
        "description" : "Create new Request or append new one to previous closed one",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DescriptionRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "created"
          },
          "403" : {
            "description" : "Not authorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          },
          "409" : {
            "description" : "Currently, there is one request unClosed",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearerAuth" : [ ]
        } ]
      }
    },
    "/request/editor/list" : {
      "get" : {
        "tags" : [ "request" ],
        "summary" : "Get users requests",
        "description" : "Get users request",
        "parameters" : [ {
          "name" : "closed",
          "in" : "query",
          "description" : "editor request is closed",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "approved",
          "in" : "query",
          "description" : "editor request is approved",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Editor requests",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ArrayEditorRequest"
                }
              }
            }
          },
          "403" : {
            "description" : "Not authorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearerAuth" : [ ]
        } ]
      }
    },
    "/answer/{id}" : {
      "get" : {
        "tags" : [ "answer" ],
        "summary" : "Get given ID answer",
        "description" : "Get ansert by given answer identifier",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "answer id to be obtained",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Answers",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AnswerDto"
                }
              }
            }
          },
          "403" : {
            "description" : "Not authorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearerAuth" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "answer" ],
        "summary" : "Delete given ID answer",
        "description" : "Delete answer by given answer identifier",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "answer id to be deleted",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Deleted"
          },
          "403" : {
            "description" : "Not authorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearerAuth" : [ ]
        } ]
      }
    },
    "/answer/list" : {
      "get" : {
        "tags" : [ "answer" ],
        "summary" : "Get user quiz answers",
        "description" : "Get current user quiz answers",
        "responses" : {
          "200" : {
            "description" : "Answers",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AnswerDto"
                }
              }
            }
          },
          "403" : {
            "description" : "Not authorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "security" : [ {
          "bearerAuth" : [ ]
        } ]
      }
    },
    "/answer/list/{id}" : {
      "get" : {
        "tags" : [ "answer" ],
        "summary" : "Get given userId user quiz answers",
        "description" : "Get user by user identifer quiz answers",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "user id to retrieve answers",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Answers",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AnswerDto"
                }
              }
            }
          },
          "403" : {
            "description" : "Not authorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "security" : [ {
          "bearerAuth" : [ ]
        } ]
      }
    }
  },
  "components" : {
    "schemas" : {
      "UserDto" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "username" : {
            "type" : "string",
            "description" : "user username"
          },
          "email" : {
            "type" : "string",
            "description" : "User email"
          },
          "fullName" : {
            "type" : "string",
            "description" : "User full name"
          },
          "role" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Rol"
            }
          }
        }
      },
      "QuizDto" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "title" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "isPublic" : {
            "type" : "boolean"
          },
          "closed" : {
            "type" : "boolean"
          },
          "approved" : {
            "type" : "boolean"
          },
          "workflow" : {
            "$ref" : "#/components/schemas/WorkflowDto"
          },
          "lastWorkflow" : {
            "$ref" : "#/components/schemas/WorkflowDto"
          },
          "questions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SimplifiedQuestionDto"
            }
          },
          "ownerId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "ownerUsername" : {
            "type" : "string"
          }
        }
      },
      "ArrayQuizDto" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/QuizDto"
        }
      },
      "ArraySimplifiedQuizDto" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/SimplifiedQuizDto"
        }
      },
      "SimplifiedQuizDto" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "title" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "questions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SimplifiedQuestionDto"
            }
          }
        }
      },
      "SimplifiedQuestionDto" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "title" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "isMultiple" : {
            "type" : "boolean"
          },
          "options" : {
            "maxItems" : 4,
            "minItems" : 2,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OptionDto"
            }
          }
        }
      },
      "QuestionDto" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "title" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "isMultiple" : {
            "type" : "boolean"
          },
          "options" : {
            "maxItems" : 4,
            "minItems" : 2,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OptionDto"
            }
          },
          "isPublic" : {
            "type" : "boolean"
          },
          "closed" : {
            "type" : "boolean"
          },
          "approved" : {
            "type" : "boolean"
          },
          "workflow" : {
            "$ref" : "#/components/schemas/WorkflowDto"
          },
          "lastWorkflow" : {
            "$ref" : "#/components/schemas/WorkflowDto"
          },
          "ownerId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "ownerUsername" : {
            "type" : "string"
          }
        }
      },
      "IndividualAnswerDto" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "userId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "questionId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "timeInMillis" : {
            "type" : "integer",
            "format" : "int64"
          },
          "submitedOptions" : {
            "type" : "array",
            "items" : {
              "type" : "integer",
              "format" : "int64"
            }
          }
        }
      },
      "ArrayIndividualAnswerDto" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/IndividualAnswerDto"
        }
      },
      "AnswerDto" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "userId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "quizId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "timeInMillis" : {
            "type" : "integer",
            "format" : "int64"
          },
          "totalPoints" : {
            "type" : "integer",
            "format" : "int64"
          },
          "individualAnswers" : {
            "$ref" : "#/components/schemas/ArrayIndividualAnswerDto"
          }
        }
      },
      "ArrayAnswerDto" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/AnswerDto"
        }
      },
      "ArrayQuestionDto" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/QuestionDto"
        }
      },
      "Auth" : {
        "type" : "object",
        "properties" : {
          "jsonWebToken" : {
            "type" : "string"
          }
        }
      },
      "Error" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "integer"
          },
          "message" : {
            "type" : "string"
          }
        }
      },
      "Rol" : {
        "type" : "string",
        "enum" : [ "USER", "EDITOR", "REVIEWER" ]
      },
      "EditorRequest" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "description" : {
            "type" : "string"
          },
          "closed" : {
            "type" : "boolean"
          },
          "approved" : {
            "type" : "boolean"
          },
          "workflow" : {
            "$ref" : "#/components/schemas/WorkflowDto"
          },
          "lastWorkflow" : {
            "$ref" : "#/components/schemas/WorkflowDto"
          }
        }
      },
      "WorkflowDto" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "title" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "status" : {
            "$ref" : "#/components/schemas/WorkflowStatus"
          },
          "statusDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "statusBy" : {
            "type" : "string",
            "description" : "reviewer username"
          },
          "nextWorkflow" : {
            "$ref" : "#/components/schemas/WorkflowDto"
          },
          "response" : {
            "type" : "string"
          }
        }
      },
      "WorkflowStatus" : {
        "type" : "string",
        "enum" : [ "APPROVED", "PENDING", "DENIED", "DRAFT", "DRAFT_FROM_APPROVED", "EXPIRED", "INCOMPLETE", "SCHEDULED" ]
      },
      "ArrayEditorRequest" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/EditorRequest"
        }
      },
      "LoginRequest" : {
        "required" : [ "password", "username" ],
        "type" : "object",
        "properties" : {
          "username" : {
            "type" : "string",
            "description" : "Username of the user to log in"
          },
          "password" : {
            "type" : "string",
            "description" : "Password of the user to log in"
          }
        }
      },
      "UpdateUserRequest" : {
        "type" : "object",
        "properties" : {
          "username" : {
            "type" : "string",
            "description" : "user username"
          },
          "password" : {
            "type" : "string",
            "description" : "User password"
          },
          "email" : {
            "type" : "string",
            "description" : "User email"
          },
          "fullName" : {
            "type" : "string",
            "description" : "User full name"
          },
          "role" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Rol"
            }
          }
        }
      },
      "DescriptionRequest" : {
        "required" : [ "description" ],
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string",
            "description" : "Request description"
          }
        }
      },
      "QuestionRequest" : {
        "required" : [ "description", "options", "publish", "title" ],
        "type" : "object",
        "properties" : {
          "title" : {
            "type" : "string",
            "description" : "question title"
          },
          "description" : {
            "type" : "string",
            "description" : "question description"
          },
          "options" : {
            "maxItems" : 4,
            "minItems" : 2,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OptionRequest"
            }
          },
          "publish" : {
            "type" : "boolean"
          }
        }
      },
      "OptionRequest" : {
        "required" : [ "correct", "title" ],
        "type" : "object",
        "properties" : {
          "title" : {
            "type" : "string",
            "description" : "Option text"
          },
          "correct" : {
            "type" : "boolean",
            "description" : "is option correct"
          }
        }
      },
      "OptionDto" : {
        "required" : [ "correct", "id", "title" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "title" : {
            "type" : "string",
            "description" : "Option text"
          },
          "correct" : {
            "type" : "boolean",
            "description" : "is option correct"
          }
        }
      },
      "QuizRequest" : {
        "required" : [ "description", "publish", "questionIds", "title" ],
        "type" : "object",
        "properties" : {
          "title" : {
            "type" : "string",
            "description" : "question title"
          },
          "description" : {
            "type" : "string",
            "description" : "question description"
          },
          "questionIds" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "type" : "integer",
              "format" : "int64"
            }
          },
          "publish" : {
            "type" : "boolean",
            "description" : "publish quiz"
          }
        }
      },
      "UserRequest" : {
        "required" : [ "email", "fullName", "password", "username" ],
        "type" : "object",
        "properties" : {
          "username" : {
            "type" : "string",
            "description" : "user username"
          },
          "password" : {
            "type" : "string",
            "description" : "User password"
          },
          "email" : {
            "type" : "string",
            "description" : "User email"
          },
          "fullName" : {
            "type" : "string",
            "description" : "User full name"
          }
        }
      },
      "WorkflowUpdateRequest" : {
        "required" : [ "response" ],
        "type" : "object",
        "properties" : {
          "response" : {
            "type" : "string",
            "description" : "response message"
          }
        }
      },
      "IndividualAnswerRequest" : {
        "required" : [ "optionsIds", "questionId", "timeInMillis" ],
        "type" : "object",
        "properties" : {
          "questionId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "timeInMillis" : {
            "type" : "integer",
            "format" : "int64"
          },
          "optionsIds" : {
            "type" : "array",
            "items" : {
              "type" : "integer",
              "format" : "int64"
            }
          }
        }
      },
      "AnswerRequest" : {
        "required" : [ "individualAnswers" ],
        "properties" : {
          "individualAnswers" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/IndividualAnswerRequest"
            }
          }
        }
      }
    },
    "securitySchemes" : {
      "bearerAuth" : {
        "type" : "http",
        "scheme" : "bearer",
        "bearerFormat" : "JWT"
      }
    }
  }
}